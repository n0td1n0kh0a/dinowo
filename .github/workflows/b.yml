name: UEFI VM (Not Recommended)

on: 
  workflow_dispatch:
    inputs:
      ngrok:
        description: 'Enter Ngrok Authtoken'
        required: true
      link_iso:
        description: 'Enter Custom Iso Direct Link'
        required: true
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          sudo apt update -y
          sudo apt install curl wget qemu-kvm cpulimit -y
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up
      - name: Run
        run: |
          sudo chmod 666 /dev/kvm
          sudo qemu-img create -f qcow2 /mnt/a.qcow2 128G
          sudo qemu-img create -f raw a.img 20G
          wget -O file.iso "${{ github.event.inputs.link_iso }}" &>/dev/null &
          while ps axg | grep -vw grep | grep -w wget > /dev/null; do sleep 1; done
          wget -O driver.iso https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.240-1/virtio-win-0.1.240.iso &>/dev/null &
          while ps axg | grep -vw grep | grep -w wget > /dev/null; do sleep 1; done
          echo "IP:"
          curl --silent --show-error http://127.0.0.1:4040/api/tunnels | sed -nE 's/.*public_url":"tcp:..([^"]*).*/\1/p'
          sudo cpulimit -l 50 -- sudo kvm -M q35,usb=on -device usb-tablet -cpu host -smp 2 -m 8G -device virtio-balloon-pci -vga qxl -net nic,netdev=n0 -netdev user,id=n0 -boot c -device virtio-serial-pci -device virtio-rng-pci -enable-kvm -drive file=/mnt/a.qcow2 -drive file=file.iso,media=cdrom -drive file=driver.iso,media=cdrom  -vnc :0 -bios /usr/share/ovmf/OVMF.fd -uuid e47ddb84-fb4d-46f9-b531-14bb15156336
          while ps axg | grep -vw grep | grep -w qemu-system-x86_64 > /dev/null; do sleep 1; done
          while ps axg | grep -vw grep | grep -w kvm > /dev/null; do sleep 1; done
